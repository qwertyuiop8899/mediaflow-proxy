#!/usr/bin/env bash
set -euo pipefail

# Start wrapper for Beamup / Heroku-like platforms (pip-only environment)

PORT="${PORT:-8888}"
WORKERS="${WORKERS:-4}"
LOG_LEVEL="${LOG_LEVEL:-info}"
TIMEOUT="${TIMEOUT:-120}"
MAX_REQUESTS="${MAX_REQUESTS:-500}"
MAX_REQUESTS_JITTER="${MAX_REQUESTS_JITTER:-200}"
FORWARDED_ALLOW_IPS="${FORWARDED_ALLOW_IPS:-127.0.0.1}" # can be '*' if behind trusted proxy

echo "[start] mediaflow-proxy (pip mode) starting on port ${PORT}..."

# Quick module verification (non-fatal)
python - <<'PY' || true
import importlib
mods = [
  'fastapi','httpx','tenacity','xmltodict','pydantic_settings','gunicorn','uvicorn','tqdm','aiofiles','bs4','lxml','psutil'
]
missing=[]
for m in mods:
  try:
    importlib.import_module(m)
  except Exception as e:
    missing.append(f"{m}:{e}")
if missing:
  print('[start][WARN] Missing modules (continuo comunque):', ', '.join(missing))
else:
  print('[start] All core Python modules present')
PY

# If a password is set for API auth, hide it from logs
if [ -n "${API_PASSWORD:-}" ]; then
  echo "[start] API auth enabled (API_PASSWORD set)"
fi

# Filter platform-added args (e.g. 'web')
SANITIZED_ARGS=()
for arg in "$@"; do
  case "$arg" in
    web|/start) ;;
    *) SANITIZED_ARGS+=("$arg");;
  esac
done

# Run gunicorn with uvicorn workers
exec gunicorn mediaflow_proxy.main:app \
  -w "${WORKERS}" \
  -k uvicorn.workers.UvicornWorker \
  --bind "0.0.0.0:${PORT}" \
  --timeout "${TIMEOUT}" \
  --max-requests "${MAX_REQUESTS}" \
  --max-requests-jitter "${MAX_REQUESTS_JITTER}" \
  --log-level "${LOG_LEVEL}" \
  --access-logfile - \
  --error-logfile - \
  --forwarded-allow-ips "${FORWARDED_ALLOW_IPS}" \
  "${SANITIZED_ARGS[@]}"
